// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace TaleCraft.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230602125628_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0-preview.4.23259.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("TaleCraft.Models.Page", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Content")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<Guid>("StoryId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("StoryId");

                    b.ToTable("Pages");
                });

            modelBuilder.Entity("TaleCraft.Models.PageLink", b =>
                {
                    b.Property<Guid>("SourcePageId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("TargetPageId")
                        .HasColumnType("uuid");

                    b.HasKey("SourcePageId", "TargetPageId");

                    b.HasIndex("TargetPageId");

                    b.ToTable("PageLinks");
                });

            modelBuilder.Entity("TaleCraft.Models.Story", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<Guid?>("FirstPageId")
                        .HasColumnType("uuid");

                    b.Property<bool>("Published")
                        .HasColumnType("boolean");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("FirstPageId")
                        .IsUnique();

                    b.ToTable("Stories");
                });

            modelBuilder.Entity("TaleCraft.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("RefreshToken")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("RefreshTokenExpiryTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("TaleCraft.Models.Page", b =>
                {
                    b.HasOne("TaleCraft.Models.Story", "Story")
                        .WithMany("Pages")
                        .HasForeignKey("StoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Story");
                });

            modelBuilder.Entity("TaleCraft.Models.PageLink", b =>
                {
                    b.HasOne("TaleCraft.Models.Page", "SourcePage")
                        .WithMany("PageLinks")
                        .HasForeignKey("SourcePageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TaleCraft.Models.Page", "TargetPage")
                        .WithMany()
                        .HasForeignKey("TargetPageId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("SourcePage");

                    b.Navigation("TargetPage");
                });

            modelBuilder.Entity("TaleCraft.Models.Story", b =>
                {
                    b.HasOne("TaleCraft.Models.Page", "FirstPage")
                        .WithOne()
                        .HasForeignKey("TaleCraft.Models.Story", "FirstPageId");

                    b.Navigation("FirstPage");
                });

            modelBuilder.Entity("TaleCraft.Models.Page", b =>
                {
                    b.Navigation("PageLinks");
                });

            modelBuilder.Entity("TaleCraft.Models.Story", b =>
                {
                    b.Navigation("Pages");
                });
#pragma warning restore 612, 618
        }
    }
}
